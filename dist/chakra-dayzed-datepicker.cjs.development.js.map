{"version":3,"file":"chakra-dayzed-datepicker.cjs.development.js","sources":["../src/utils/calanderUtils.ts","../src/components/dateNavBtns.tsx","../src/components/dayOfMonth.tsx","../src/components/calendarPanel.tsx","../src/single.tsx","../src/range.tsx"],"sourcesContent":["export const Month_Names_Full = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const Month_Names_Short = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const Weekday_Names_Short = [\n  'Sun',\n  'Mon',\n  'Tue',\n  'Wed',\n  'Thu',\n  'Fri',\n  'Sat',\n];\n","import { Button, ButtonProps } from '@chakra-ui/react';\nimport { Calendar, GetBackForwardPropsOptions } from 'dayzed';\nimport React, { Fragment } from 'react';\nimport { DatepickerProps } from '../utils/commonTypes';\n\nexport interface DatepickerBackBtnsProps extends DatepickerProps {\n  calendars: Calendar[];\n  getBackProps: (data: GetBackForwardPropsOptions) => Record<string, any>;\n}\n\nconst DefaultBtnStyle: ButtonProps = {\n  variant: 'ghost',\n  size: 'sm',\n};\n\nexport const DatepickerBackBtns: React.FC<DatepickerBackBtnsProps> = (\n  props\n) => {\n  const { calendars, getBackProps } = props;\n  const customBtnProps = props.propsConfigs?.dateNavBtnProps;\n  return (\n    <Fragment>\n      <Button\n        {...getBackProps({\n          calendars,\n          offset: 12,\n        })}\n        {...DefaultBtnStyle}\n        {...customBtnProps}\n      >\n        {'<<'}\n      </Button>\n      <Button\n        {...getBackProps({ calendars })}\n        {...DefaultBtnStyle}\n        {...customBtnProps}\n      >\n        {'<'}\n      </Button>\n    </Fragment>\n  );\n};\n\nexport interface DatepickerForwardBtnsProps extends DatepickerProps {\n  calendars: Calendar[];\n  getForwardProps: (data: GetBackForwardPropsOptions) => Record<string, any>;\n}\n\nexport const DatepickerForwardBtns: React.FC<DatepickerForwardBtnsProps> = (\n  props\n) => {\n  const { calendars, getForwardProps } = props;\n  const customBtnProps = props.propsConfigs?.dateNavBtnProps;\n  return (\n    <Fragment>\n      <Button\n        {...getForwardProps({ calendars })}\n        {...DefaultBtnStyle}\n        {...customBtnProps}\n      >\n        {'>'}\n      </Button>\n      <Button\n        {...getForwardProps({\n          calendars,\n          offset: 12,\n        })}\n        {...DefaultBtnStyle}\n        {...customBtnProps}\n      >\n        {'>>'}\n      </Button>\n    </Fragment>\n  );\n};\n","import { Button } from '@chakra-ui/react';\nimport { DateObj, RenderProps } from 'dayzed';\nimport React from 'react';\nimport { DatepickerProps } from '../utils/commonTypes';\n\ninterface DayOfMonthProps extends DatepickerProps {\n  renderProps: RenderProps;\n  isInRange?: boolean | null;\n  dateObj: DateObj;\n  onMouseEnter?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\nexport const DayOfMonth: React.FC<DayOfMonthProps> = ({\n  dateObj,\n  propsConfigs,\n  isInRange,\n  renderProps,\n  onMouseEnter,\n}) => {\n  const { date, selected, selectable, today } = dateObj;\n  const { getDateProps } = renderProps;\n  const { selectedBg, ...customBtnProps } =\n    propsConfigs?.dayOfMonthBtnProps || {};\n  let bg = selected || isInRange ? selectedBg || 'purple.200' : 'transparent';\n  bg = !selectable ? customBtnProps?.disabledBg || 'red.200' : bg;\n  const halfGap = 0.125; //default Chakra-gap-space-1 is 0.25rem\n  return (\n    <Button\n      {...getDateProps({\n        dateObj,\n        disabled: !selectable,\n        onMouseEnter: onMouseEnter,\n      })}\n      disabled={!selectable}\n      size=\"sm\"\n      variant=\"outline\"\n      bg={bg}\n      _hover={{\n        bg: 'purple.400',\n      }}\n      // this intends to fill the visual gap from Grid to improve the UX\n      // so the button active area is actually larger than when it's seen\n      _after={{\n        content: \"''\",\n        position: 'absolute',\n        top: `-${halfGap}rem`,\n        left: `-${halfGap}rem`,\n        bottom: `-${halfGap}rem`,\n        right: `-${halfGap}rem`,\n        borderWidth: `${halfGap}rem`,\n        borderColor: 'transparent',\n      }}\n      {...customBtnProps}\n      borderColor={\n        today ? customBtnProps?.borderColor || 'blue.400' : 'transparent'\n      }\n    >\n      {selectable ? date.getDate() : 'X'}\n    </Button>\n  );\n};\n","import {\n  HStack,\n  VStack,\n  Heading,\n  Divider,\n  SimpleGrid,\n  Box,\n  Stack,\n} from '@chakra-ui/react';\nimport { RenderProps } from 'dayzed';\nimport React from 'react';\nimport { DatepickerConfigs, DatepickerProps } from '../utils/commonTypes';\nimport { DatepickerBackBtns, DatepickerForwardBtns } from './dateNavBtns';\nimport { DayOfMonth } from './dayOfMonth';\n\ninterface CalendarPanelProps extends DatepickerProps {\n  renderProps: RenderProps;\n  configs: DatepickerConfigs;\n  onMouseEnterHighlight?: (date: Date) => void;\n  isInRange?: (date: Date) => boolean | null;\n}\n\nexport const CalendarPanel: React.FC<CalendarPanelProps> = ({\n  renderProps,\n  configs,\n  propsConfigs,\n  onMouseEnterHighlight,\n  isInRange,\n}) => {\n  const { calendars, getBackProps, getForwardProps } = renderProps;\n\n  if (calendars.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Stack\n      className=\"datepicker-calendar\"\n      direction={['column', 'column', 'row']}\n    >\n      {calendars.map((calendar) => {\n        return (\n          <VStack\n            key={`${calendar.month}${calendar.year}`}\n            height=\"100%\"\n            borderWidth=\"1px\"\n            padding=\"5px 10px\"\n          >\n            <HStack>\n              <DatepickerBackBtns\n                calendars={calendars}\n                getBackProps={getBackProps}\n                propsConfigs={propsConfigs}\n              />\n              <Heading size=\"sm\" textAlign=\"center\">\n                {configs.monthNames[calendar.month]} {calendar.year}\n              </Heading>\n              <DatepickerForwardBtns\n                calendars={calendars}\n                getForwardProps={getForwardProps}\n                propsConfigs={propsConfigs}\n              />\n            </HStack>\n            <Divider />\n            <SimpleGrid columns={7} spacing={1} textAlign=\"center\">\n              {configs.dayNames.map((day) => (\n                <Box\n                  fontSize=\"sm\"\n                  fontWeight=\"semibold\"\n                  key={`${calendar.month}${calendar.year}${day}`}\n                >\n                  {day}\n                </Box>\n              ))}\n              {calendar.weeks.map((week, weekIdx) => {\n                return week.map((dateObj, index) => {\n                  const key = `${calendar.month}${calendar.year}${weekIdx}${index}`;\n                  if (!dateObj) return <Box key={key} />;\n                  const { date } = dateObj;\n                  return (\n                    <DayOfMonth\n                      key={key}\n                      dateObj={dateObj}\n                      propsConfigs={propsConfigs}\n                      renderProps={renderProps}\n                      isInRange={isInRange && isInRange(date)}\n                      onMouseEnter={() => {\n                        if (onMouseEnterHighlight) onMouseEnterHighlight(date);\n                      }}\n                    />\n                  );\n                });\n              })}\n            </SimpleGrid>\n          </VStack>\n        );\n      })}\n    </Stack>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport {\n  Input,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  useOutsideClick,\n} from '@chakra-ui/react';\nimport { useDayzed } from 'dayzed';\nimport { format } from 'date-fns';\nimport { Month_Names_Short, Weekday_Names_Short } from './utils/calanderUtils';\nimport { CalendarPanel } from './components/calendarPanel';\nimport {\n  DatepickerConfigs,\n  DatepickerProps,\n  OnDateSelected,\n} from './utils/commonTypes';\n\nexport interface SingleDatepickerProps extends DatepickerProps {\n  date?: Date;\n  configs?: DatepickerConfigs;\n  disabled?: boolean;\n  onDateChange: (date: Date) => void;\n  id?: string;\n  name?: string;\n}\n\nconst DefaultConfigs = {\n  dateFormat: 'yyyy-MM-dd',\n  monthNames: Month_Names_Short,\n  dayNames: Weekday_Names_Short,\n};\n\nexport const SingleDatepicker: React.FC<SingleDatepickerProps> = ({\n  configs = DefaultConfigs,\n  propsConfigs,\n  ...props\n}) => {\n  const { date, name, disabled, onDateChange, id } = props;\n\n  // chakra popover utils\n  const ref = useRef<HTMLElement>(null);\n  const initialFocusRef = useRef<HTMLInputElement>(null);\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  useOutsideClick({\n    ref: ref,\n    handler: () => setPopoverOpen(false),\n  });\n\n  // dayzed utils\n  const handleOnDateSelected: OnDateSelected = ({ selectable, date }) => {\n    if (!selectable) return;\n    if (date instanceof Date && !isNaN(date.getTime())) {\n      onDateChange(date);\n      setPopoverOpen(false);\n      return;\n    }\n  };\n\n  const dayzedData = useDayzed({\n    showOutsideDays: true,\n    onDateSelected: handleOnDateSelected,\n    selected: date,\n  });\n\n  return (\n    <Popover\n      placement=\"bottom-start\"\n      variant=\"responsive\"\n      isOpen={popoverOpen}\n      onClose={() => setPopoverOpen(false)}\n      initialFocusRef={initialFocusRef}\n      isLazy\n    >\n      <PopoverTrigger>\n        <Input\n          id={id}\n          autoComplete=\"off\"\n          isDisabled={disabled}\n          ref={initialFocusRef}\n          onClick={() => setPopoverOpen(!popoverOpen)}\n          name={name}\n          value={date ? format(date, configs.dateFormat) : ''}\n          onChange={(e) => e.target.value}\n          {...propsConfigs?.inputProps}\n        />\n      </PopoverTrigger>\n      <PopoverContent ref={ref} width=\"100%\">\n        <PopoverBody>\n          <CalendarPanel\n            renderProps={dayzedData}\n            configs={configs}\n            propsConfigs={propsConfigs}\n          />\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { RenderProps, useDayzed } from 'dayzed';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { Month_Names_Short, Weekday_Names_Short } from './utils/calanderUtils';\nimport {\n  Flex,\n  Input,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  useOutsideClick,\n} from '@chakra-ui/react';\nimport { CalendarPanel } from './components/calendarPanel';\nimport {\n  DatepickerConfigs,\n  DatepickerProps,\n  OnDateSelected,\n  PropsConfigs,\n} from './utils/commonTypes';\nimport { format } from 'date-fns';\n\ninterface RangeCalendarPanelProps {\n  configs: DatepickerConfigs;\n  propsConfigs?: PropsConfigs;\n  selected?: Date | Date[];\n  renderProps: RenderProps;\n}\n\nconst RangeCalendarPanel: React.FC<RangeCalendarPanelProps> = ({\n  configs,\n  propsConfigs,\n  selected,\n  renderProps,\n}) => {\n  const [hoveredDate, setHoveredDate] = useState<Date | null>(null);\n  const { calendars } = renderProps;\n\n  // looking for a useRef() approach to replace it\n  const getKeyOffset = (num: number) => {\n    const e = document.activeElement;\n    let buttons = document.querySelectorAll('button');\n    buttons.forEach((el, i) => {\n      const newNodeKey = i + num;\n      if (el === e) {\n        if (newNodeKey <= buttons.length - 1 && newNodeKey >= 0) {\n          buttons[newNodeKey].focus();\n        } else {\n          buttons[0].focus();\n        }\n      }\n    });\n  };\n\n  ArrowKeysReact.config({\n    left: () => {\n      getKeyOffset(-1);\n    },\n    right: () => {\n      getKeyOffset(1);\n    },\n    up: () => {\n      getKeyOffset(-7);\n    },\n    down: () => {\n      getKeyOffset(7);\n    },\n  });\n\n  // Calendar level\n  const onMouseLeave = () => {\n    setHoveredDate(null);\n  };\n\n  // Date level\n  const onMouseEnterHighlight = (date: Date) => {\n    if (!Array.isArray(selected) || !selected?.length) {\n      return;\n    }\n    setHoveredDate(date);\n  };\n\n  const isInRange = (date: Date) => {\n    if (!Array.isArray(selected) || !selected?.length) {\n      return false;\n    }\n    let firstSelected = selected[0];\n    if (selected.length === 2) {\n      let secondSelected = selected[1];\n      return firstSelected < date && secondSelected > date;\n    } else {\n      return (\n        hoveredDate &&\n        ((firstSelected < date && hoveredDate >= date) ||\n          (date < firstSelected && date >= hoveredDate))\n      );\n    }\n  };\n\n  if (!(calendars.length > 0)) return null;\n\n  return (\n    <Flex {...ArrowKeysReact.events} onMouseLeave={onMouseLeave}>\n      <CalendarPanel\n        renderProps={renderProps}\n        configs={configs}\n        propsConfigs={propsConfigs}\n        isInRange={isInRange}\n        onMouseEnterHighlight={onMouseEnterHighlight}\n      />\n    </Flex>\n  );\n};\n\nexport interface RangeDatepickerProps extends DatepickerProps {\n  initDate?: Date;\n  selectedDates: Date[];\n  minDate?: Date;\n  maxDate?: Date;\n  configs?: DatepickerConfigs;\n  disabled?: boolean;\n  onDateChange: (date: Date[]) => void;\n  id?: string;\n  name?: string;\n}\n\nconst DefaultConfigs = {\n  dateFormat: 'MM/dd/yyyy',\n  monthNames: Month_Names_Short,\n  dayNames: Weekday_Names_Short,\n};\n\nexport const RangeDatepicker: React.FC<RangeDatepickerProps> = ({\n  configs = DefaultConfigs,\n  propsConfigs = {},\n  initDate = new Date(),\n  id,\n  name,\n  ...props\n}) => {\n  const { selectedDates, minDate, maxDate, onDateChange, disabled } = props;\n\n  // chakra popover utils\n  const ref = useRef<HTMLElement>(null);\n  const initialFocusRef = useRef<HTMLInputElement>(null);\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  useOutsideClick({\n    ref: ref,\n    handler: () => setPopoverOpen(false),\n  });\n\n  // dayzed utils\n  const handleOnDateSelected: OnDateSelected = ({ selectable, date }) => {\n    if (!selectable) {\n      return;\n    }\n    let newDates = [...selectedDates];\n    if (selectedDates.length) {\n      if (selectedDates.length === 1) {\n        let firstTime = selectedDates[0];\n        if (firstTime < date) {\n          newDates.push(date);\n        } else {\n          newDates.unshift(date);\n        }\n        onDateChange(newDates);\n      } else if (newDates.length === 2) {\n        onDateChange([date]);\n      }\n    } else {\n      newDates.push(date);\n      onDateChange(newDates);\n    }\n  };\n\n  const dayzedData = useDayzed({\n    onDateSelected: handleOnDateSelected,\n    selected: selectedDates,\n    monthsToDisplay: 2,\n    date: initDate,\n    minDate: minDate,\n    maxDate: maxDate,\n  });\n\n  // eventually we want to allow user to freely type their own input and parse the input\n  let intVal = selectedDates[0]\n    ? `${format(selectedDates[0], configs.dateFormat)}`\n    : '';\n  intVal += selectedDates[1]\n    ? ` - ${format(selectedDates[1], configs.dateFormat)}`\n    : '';\n\n  return (\n    <Popover\n      placement=\"bottom-start\"\n      variant=\"responsive\"\n      isOpen={popoverOpen}\n      onClose={() => setPopoverOpen(false)}\n      initialFocusRef={initialFocusRef}\n      isLazy\n    >\n      <PopoverTrigger>\n        <Input\n          id={id}\n          autoComplete=\"off\"\n          isDisabled={disabled}\n          ref={initialFocusRef}\n          onClick={() => setPopoverOpen(!popoverOpen)}\n          name={name}\n          value={intVal}\n          onChange={(e) => e.target.value}\n          {...propsConfigs.inputProps}\n        />\n      </PopoverTrigger>\n      <PopoverContent ref={ref} width=\"100%\">\n        <PopoverBody>\n          <RangeCalendarPanel\n            renderProps={dayzedData}\n            configs={configs}\n            propsConfigs={propsConfigs}\n            selected={selectedDates}\n          />\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n"],"names":["Month_Names_Short","Weekday_Names_Short","DefaultBtnStyle","variant","size","DatepickerBackBtns","props","calendars","getBackProps","customBtnProps","propsConfigs","dateNavBtnProps","React","Fragment","Button","offset","DatepickerForwardBtns","getForwardProps","DayOfMonth","dateObj","isInRange","renderProps","onMouseEnter","date","selected","selectable","today","getDateProps","dayOfMonthBtnProps","selectedBg","bg","disabledBg","halfGap","disabled","_hover","_after","content","position","top","left","bottom","right","borderWidth","borderColor","getDate","CalendarPanel","configs","onMouseEnterHighlight","length","Stack","className","direction","map","calendar","VStack","key","month","year","height","padding","HStack","Heading","textAlign","monthNames","Divider","SimpleGrid","columns","spacing","dayNames","day","Box","fontSize","fontWeight","weeks","week","weekIdx","index","DefaultConfigs","dateFormat","SingleDatepicker","name","onDateChange","id","ref","useRef","initialFocusRef","useState","popoverOpen","setPopoverOpen","useOutsideClick","handler","handleOnDateSelected","Date","isNaN","getTime","dayzedData","useDayzed","showOutsideDays","onDateSelected","Popover","placement","isOpen","onClose","isLazy","PopoverTrigger","Input","autoComplete","isDisabled","onClick","value","format","onChange","e","target","inputProps","PopoverContent","width","PopoverBody","RangeCalendarPanel","hoveredDate","setHoveredDate","getKeyOffset","num","document","activeElement","buttons","querySelectorAll","forEach","el","i","newNodeKey","focus","ArrowKeysReact","config","up","down","onMouseLeave","Array","isArray","firstSelected","secondSelected","Flex","events","RangeDatepicker","initDate","selectedDates","minDate","maxDate","newDates","firstTime","push","unshift","monthsToDisplay","intVal"],"mappings":"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"}